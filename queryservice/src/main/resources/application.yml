spring:
  profiles: default
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  application:
    name: queryservice
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  data:
    mongodb:
      uri: mongodb://localhost:27017/stock_market
server:
  port : 8081

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true
  lease-renewal-interval-in-seconds: 30
security:
  oauth2:
    resource:
      filter-order: 3
  signing-key: MaYzkSjmkzPC57L
  encoding-strength: 256
  security-realm: Spring Boot JWT Example Realm
  jwt:
    client-id: testjwtclientid
    client-secret: XY7kmzoNzl100
    grant-type: password
    scope-read: read
    scope-write: write
    resource-ids: testjwtresourceid

---
spring:
  profiles: docker
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  application:
    name: queryservice
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  data:
    mongodb:
      uri: mongodb://mongo_db:27017/stock_market
server:
  port : 8081
