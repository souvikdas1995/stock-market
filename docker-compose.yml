version: '3'

services:
  #service 1 : mysql
  db:
    image: mysql:8.0.19
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: pass@word1
      MYSQL_DATABASE: stock_market
    ports:
      - "3307:3306"
    restart: always
   #service 2 : command Service
  commandService:
    image: command-service
    container_name: command-service-app
    build:
      context: .
      dockerfile: ./commandservice/Dockerfile
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - db
      - kafka
    #service 3 : zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    # service 4 : kafka
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "stock_market:1:1"
    #service 5 : queryservice
  queryService:
    image: query-service
    container_name: query-service-app
    build:
      context: .
      dockerfile: ./queryservice/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - mongo_db
      - kafka
    restart: always
    #service 6 : mongodb
  mongo_db:
    image: "mongo:4.4.3"
    restart: always
    ports:
      - 27018:27017
   #service 7 : frontend from dockerhub

  frontend_angular:
    image: "souvikd95/stock-market-frontend:latest"
    ports:
      - "4200:80"
    restart: always
    depends_on:
      - commandService
      - queryService